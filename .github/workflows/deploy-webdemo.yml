name: Release to Github Pages

on:
  push:
    branches: [main, master]
  workflow_dispatch:

permissions:
  contents: write # for committing to gh-pages branch.
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  Github-Pages-Release:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install nightly Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          targets: wasm32-unknown-unknown

      # If using tailwind...
      # - name: Download and install tailwindcss binary
      #   run: npm install -D tailwindcss && npx tailwindcss -i <INPUT/PATH.css> -o <OUTPUT/PATH.css>  # run tailwind

      - uses: jetli/trunk-action@v0.5.1
        with:
          # Optional version of trunk to install(eg. 'v0.21.14', 'latest')
          version: 'v0.21.14'
      - name: Build with Trunk
        # "${GITHUB_REPOSITORY#*/}" evaluates into the name of the repository
        # using --public-url something will allow trunk to modify all the href paths like from favicon.ico to repo_name/favicon.ico .
        # this is necessary for github pages where the site is deployed to username.github.io/repo_name and all files must be requested
        # relatively as favicon.ico. if we skip public-url option, the href paths will instead request username.github.io/favicon.ico which
        # will obviously return error 404 not found.
        working-directory: ./webdemo
        run: trunk build --release --public-url "$public_url"
        env:
          public_url: "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"

      # Deploy to gh-pages branch
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: webdemo/dist

      # Deploy with Github Static Pages
      #
      # - name: Setup Pages
      #   uses: actions/configure-pages@v5
      #   with:
      #     enablement: true
      #     # token:
      #
      # - name: Upload artifact
      #   uses: actions/upload-pages-artifact@v3
      #   with:
      #     # Upload dist dir
      #     path: './webdemo/dist'
      #
      # - name: Deploy to GitHub Pages ðŸš€
      #   id: deployment
      #   uses: actions/deploy-pages@v4
